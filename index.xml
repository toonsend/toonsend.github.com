<?xml version="1.0"?>
<rss version="2.0">
<channel>
<title>ToonsWiki</title>
<description>a place for stuff</description>
<language>en</language>
<copyright>Copyright 2013 Toons</copyright>
<pubDate>Fri, 01 Mar 2013 16:17:36 GMT</pubDate>
<lastBuildDate>Fri, 01 Mar 2013 16:17:36 GMT</lastBuildDate>
<docs>http://blogs.law.harvard.edu/tech/rss</docs>
<generator>TiddlyWiki 2.6.5</generator>
<item>
<title>Using openssl to extract private key ( .pem file) from .pfx (Personal Information Exchange)</title>
<description>PFX : PFX defines a file format commonly used to store private with accompanying public key certificates, protected with a password-based symmetric key (standard-&lt;a tiddlylink=&quot;PKCS12&quot; refresh=&quot;link&quot; target=&quot;_blank&quot; title=&quot;External link to null#PKCS12&quot; href=&quot;null#PKCS12&quot; class=&quot;externalLink null&quot;&gt;PKCS12&lt;/a&gt;).&lt;br&gt;&lt;br&gt;PEM : Openssl usages PEM (Privacy Enhanced Mail Certificate) to store the private key.&lt;br&gt;&lt;br&gt;If you want to extract private key from a pfx file and write it to PEM file&lt;br&gt;&lt;code&gt; 
openssl.exe pkcs12 -in publicAndprivate.pfx -nocerts -out privateKey.pem
&lt;/code&gt;&lt;br&gt;&lt;br&gt;If you want to extract the certificate file (the signed public key) from the pfx file&lt;br&gt;&lt;pre&gt;openssl.exe pkcs12 -in publicAndprivate.pfx -clcerts -nokeys -out publicCert.pem
&lt;/pre&gt;&lt;br&gt;To remove the password from the private key file.&lt;br&gt;&lt;pre&gt;openssl.exe rsa -in privateKey.pem -out private.pem
&lt;/pre&gt;&lt;br&gt;This is required as, at the time of exporting privateKey, you have added a password to the private key to secure it. If you left the password with it, it will keep asking the password as any application tries to access it.</description>
<category>ssl</category>
<link>null#%5B%5BUsing%20openssl%20to%20extract%20private%20key%20(%20.pem%20file)%20from%20.pfx%20(Personal%20Information%20Exchange)%5D%5D</link>
<pubDate>Fri, 01 Mar 2013 16:17:28 GMT</pubDate>

</item>
<item>
<title>Add User to Box Script</title>
<description>&lt;pre&gt;#!/bin/bash

if [ &quot;$1&quot; == &quot;&quot; ]
then
        echo -n 'Username? '
        read INNAME
fi

sudo -v

echo sudo -v
echo sudo groupadd **GROUP**
echo sudo groupadd **GROUP**

for loop in $INNAME $*
do
        sudo true
        NAME=$loop
        echo sudo groupadd $NAME
        echo &quot;sudo useradd -g $NAME -G admin,**GROUP**,**GROUP** -d /home/$NAME -s /bin/bash -m -p '' $NAME&quot;
        echo sudo mkdir /home/$NAME/.ssh
        echo &quot;cat &amp;lt;&amp;lt; HERE | sudo tee -a /home/$NAME/.ssh/authorized_keys&quot;
        sudo cat /home/$NAME/.ssh/authorized_keys
        echo HERE
        echo sudo chown -R $NAME:$NAME /home/$NAME/.ssh
        echo sudo chmod -R 700 /home/$NAME/.ssh
done
&lt;/pre&gt;</description>
<category>Linux</category>
<link>null#%5B%5BAdd%20User%20to%20Box%20Script%5D%5D</link>
<pubDate>Fri, 25 Jan 2013 11:50:00 GMT</pubDate>

</item>
<item>
<title>How to remove an entry from Chrome's Remembered URLs</title>
<description>For Chrome on Mac OS X.&lt;br&gt;&lt;br&gt;Start typing URL you want to remove.&lt;br&gt;User keyboard arrows to move selection to full URL.&lt;br&gt;Press Fn + Shift + Del</description>
<category>Chrome</category>
<link>null#%5B%5BHow%20to%20remove%20an%20entry%20from%20Chrome's%20Remembered%20URLs%5D%5D</link>
<pubDate>Tue, 22 Jan 2013 11:43:00 GMT</pubDate>

</item>
<item>
<title>Who was last on the box</title>
<description>Find out who was last on the box, sometimes provide other info, such as restarts.&lt;br&gt;&lt;br&gt;&lt;pre&gt;last -f /var/log/wtmp
&lt;/pre&gt;</description>
<category>Ubuntu</category>
<link>null#%5B%5BWho%20was%20last%20on%20the%20box%5D%5D</link>
<pubDate>Thu, 03 Jan 2013 15:13:00 GMT</pubDate>

</item>
<item>
<title>HaProxy Log Format</title>
<description>from &lt;a target=&quot;_blank&quot; title=&quot;External link to http://code.google.com/p/haproxy-docs/wiki/HTTPLogFormat&quot; href=&quot;http://code.google.com/p/haproxy-docs/wiki/HTTPLogFormat&quot; class=&quot;externalLink&quot;&gt;http://code.google.com/p/haproxy-docs/wiki/HTTPLogFormat&lt;/a&gt;&lt;br&gt;&lt;br&gt;Example&lt;br&gt;frontend http-in&lt;br&gt;    mode http&lt;br&gt;    option httplog&lt;br&gt;    log global&lt;br&gt;    default_backend bck&lt;br&gt;&lt;br&gt;backend static&lt;br&gt;    server srv1 127.0.0.1:8000&lt;br&gt;&lt;br&gt;&lt;blockquote&gt;&lt;blockquote&gt;&lt;blockquote&gt; Feb  6 12:14:14 localhost \&lt;br&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;&lt;/blockquote&gt;      haproxy[14389]: 10.0.1.2:33317 [06/Feb/2009:12:14:14.655] http-in \&lt;br&gt;      static/srv1 10/0/30/69/109 200 2750 - - &lt;strike&gt;&lt;/strike&gt; 1/1/1/1/0 0/0 {1wt.eu} \&lt;br&gt;      {} &quot;GET /index.html HTTP/1.1&quot;&lt;br&gt;Field	 Format	 Extract from the example above&lt;br&gt;1	process_name '[' pid ']:'	haproxy[14389]:&lt;br&gt;2	client_ip ':' client_port	10.0.1.2:33317&lt;br&gt;3	'[' accept_date ']'	[06/Feb/2009:12:14:14.655]&lt;br&gt;4	frontend_name	http-in&lt;br&gt;5	backend_name '/' server_name	static/srv1&lt;br&gt;6	Tq '/' Tw '/' Tc '/' Tr '/' Tt*	10/0/30/69/109&lt;br&gt;7	status_code	200&lt;br&gt;8	bytes_read*	2750&lt;br&gt;9	captured_request_cookie	-&lt;br&gt;10	captured_response_cookie	-&lt;br&gt;11	termination_state	&lt;strike&gt;&lt;/strike&gt;&lt;br&gt;12	actconn '/' feconn '/' beconn '/' srv_conn '/' retries*	1/1/1/1/0&lt;br&gt;13	srv_queue '/' backend_queue	0/0&lt;br&gt;14	'{' captured_request_headers* '}'	{haproxy.1wt.eu}&lt;br&gt;15	'{' captured_response_headers* '}'	{}&lt;br&gt;16	'&quot;' http_request '&quot;'	&quot;GET /index.html HTTP/1.1&quot;&lt;br&gt;</description>
<category>ToTidy</category>
<link>null#%5B%5BHaProxy%20Log%20Format%5D%5D</link>
<pubDate>Tue, 30 Oct 2012 11:20:00 GMT</pubDate>

</item>
<item>
<title>Parsing HaProxy Logs for 500 errors</title>
<description>&lt;pre&gt;cat messages | awk '$13==&quot;504&quot; { split($3,hr,&quot;:&quot;); print $1,$2,hr[1]}'
 | uniq -c
&lt;/pre&gt;</description>
<category>Bash</category>
<link>null#%5B%5BParsing%20HaProxy%20Logs%20for%20500%20errors%5D%5D</link>
<pubDate>Tue, 30 Oct 2012 11:18:00 GMT</pubDate>

</item>
<item>
<title>Pushing and Popping a Directory</title>
<description>&lt;pre&gt;pushd /
&lt;/pre&gt;&lt;br&gt;Change to / and push current directory on to stack.&lt;br&gt;&lt;br&gt;&lt;pre&gt;popd
&lt;/pre&gt;&lt;br&gt;Return to original directory</description>
<category>Linux</category>
<link>null#%5B%5BPushing%20and%20Popping%20a%20Directory%5D%5D</link>
<pubDate>Mon, 22 Oct 2012 16:33:00 GMT</pubDate>

</item>
<item>
<title>Rolling back a commit if you haven't pushed</title>
<description>This will not remove the changes but will simply rollback the commit.&lt;br&gt;&lt;pre&gt;git reset --soft HEAD^
&lt;/pre&gt;</description>
<category>Git</category>
<link>null#%5B%5BRolling%20back%20a%20commit%20if%20you%20haven't%20pushed%5D%5D</link>
<pubDate>Thu, 13 Sep 2012 13:04:00 GMT</pubDate>

</item>
<item>
<title>Count the number of lines per minute sent to Logfile.</title>
<description>&lt;pre&gt;while true; do tail -n0 -f info_log.log&amp;gt;/tmp/tmp.log &amp;amp; sleep 60; 
kill $! ; wc -l /tmp/tmp.log | cut -c-2; done 2&amp;gt;/dev/null
&lt;/pre&gt;&lt;br&gt;For Falcon&lt;br&gt;&lt;pre&gt;while true; do tail -n0 -f request_log.open 
| grep 'HTTP Status Code:&quot;200&quot;' 
&amp;gt;/tmp/tmp.log &amp;amp; sleep 60; kill $! ; wc -l /tmp/tmp.log 
| cut -c-2; done 2&amp;gt;/dev/null
&lt;/pre&gt;</description>
<category>Linux</category>
<link>null#%5B%5BCount%20the%20number%20of%20lines%20per%20minute%20sent%20to%20Logfile.%5D%5D</link>
<pubDate>Wed, 25 Jul 2012 15:44:00 GMT</pubDate>

</item>
<item>
<title>Vim Grammar</title>
<description>&lt;strong&gt;COUNT&lt;/strong&gt;&lt;br&gt;&lt;br&gt;number&lt;br&gt;&lt;br&gt;&lt;strong&gt;VERBS&lt;/strong&gt;&lt;br&gt;&lt;br&gt;yank y&lt;br&gt;yank line yy&lt;br&gt;delete&lt;br&gt;delete line dd&lt;br&gt;change c&lt;br&gt;change line cc&lt;br&gt;insert i&lt;br&gt;visual v&lt;br&gt;uppercase gU&lt;br&gt;lowercase gu&lt;br&gt;&lt;br&gt;&lt;strong&gt;MODIFIERS&lt;/strong&gt;&lt;br&gt;&lt;br&gt;around a&lt;br&gt;inside i&lt;br&gt;till t&lt;br&gt;find f&lt;br&gt;regex /&lt;br&gt;backwards regex ?&lt;br&gt;&lt;br&gt;&lt;strong&gt;NOUNS&lt;/strong&gt;&lt;br&gt;&lt;br&gt;beginning of word b&lt;br&gt;word w&lt;br&gt;end of word e&lt;br&gt;beginning of line $&lt;br&gt;end of line ^&lt;br&gt;sentence s&lt;br&gt;paragraph p&lt;br&gt;start of document gg&lt;br&gt;end of document G&lt;br&gt;&lt;br&gt;&lt;strong&gt;IRREGULAR&lt;/strong&gt;&lt;br&gt;&lt;br&gt;D = delete till end of line&lt;br&gt;C = change till end of line&lt;br&gt;V = visually line&lt;br&gt;gUU = uppercase line&lt;br&gt;guu = uppercase line&lt;br&gt;</description>
<category>Vim</category>
<link>null#%5B%5BVim%20Grammar%5D%5D</link>
<pubDate>Thu, 19 Jul 2012 01:43:00 GMT</pubDate>

</item>
<item>
<title>Vim as a Word Processor</title>
<description>&lt;a target=&quot;_blank&quot; title=&quot;External link to http://www.drbunsen.org/writing-in-vim.html&quot; href=&quot;http://www.drbunsen.org/writing-in-vim.html&quot; class=&quot;externalLink&quot;&gt;http://www.drbunsen.org/writing-in-vim.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;Vim is a tremendous tool for text manipulation, but it is not configured properly for writing right out of the box. This drawback alone is enough to dissuade some people from ever using Vim.1 This is unfortunate. The idiosyncrasies that make Vim awkward for word processing exist because Vim is principally configured to operate as a code editor. However, with only a few customizations Vim can become a power writing tool. This post is about my experiences with optimizing Vim for writing...</description>
<category>Vim</category>
<link>null#%5B%5BVim%20as%20a%20Word%20Processor%5D%5D</link>
<pubDate>Thu, 19 Jul 2012 01:43:00 GMT</pubDate>

</item>
<item>
<title>Compiling Vim from Source</title>
<description>Vim build configure options&lt;br&gt;&lt;br&gt;&lt;pre&gt;./configure 
   --enable-rubyinterp 
   --prefix=/usr/local/vim/vim73 
   --with-features=big
&lt;/pre&gt;</description>
<category>Vim</category>
<link>null#%5B%5BCompiling%20Vim%20from%20Source%5D%5D</link>
<pubDate>Wed, 11 Jul 2012 13:54:00 GMT</pubDate>

</item>
<item>
<title>Flushing Your Local DNS Cache</title>
<description>&lt;pre&gt;dscacheutil -flushcache
&lt;/pre&gt;</description>
<category>Mac</category>
<link>null#%5B%5BFlushing%20Your%20Local%20DNS%20Cache%5D%5D</link>
<pubDate>Tue, 10 Jul 2012 15:40:00 GMT</pubDate>

</item>
<item>
<title>Checking External IP of a Box</title>
<description>&lt;pre&gt;curl http://checkip.dyndns.org
&lt;/pre&gt;</description>
<category>Linux</category>
<link>null#%5B%5BChecking%20External%20IP%20of%20a%20Box%5D%5D</link>
<pubDate>Tue, 10 Jul 2012 15:39:00 GMT</pubDate>

</item>
<item>
<title>New Machine Install Software</title>
<description>&lt;pre&gt;Seashore - The friendly GIMP image editor
Caffeine - Choose when to not let your computer go to sleep
Peep Open - Textmate fuzzy find for VIM
Adium - IM Client
SizeUp - Window manager
Notational Velocity - Note taker on steroids
OpenOffice - If needs must
Alfred - Application manager
SequelPro - GUI for mysql
Propane - Campfire client
TweetDeck - Getting a bit bloated but a great twitter client
VLC - The best video player around
Spotify - Music Player
SublimeText - Text Editor
VirtualBox - VM Manager
UnRarX - Rar rar
XCode - Needed for mac dev libs
&lt;/pre&gt;</description>
<category>Mac</category>
<link>null#%5B%5BNew%20Machine%20Install%20Software%5D%5D</link>
<pubDate>Fri, 01 Jun 2012 13:13:00 GMT</pubDate>

</item>
<item>
<title>How to Tell What Version of Ubuntu You Are Running</title>
<description>Telling what version of Ubuntu you are running is extremely easy. You would commonly use this command to figure out if you are running Edgy after you upgraded from Dapper.&lt;br&gt;&lt;br&gt;&lt;pre&gt;cat /etc/issue
&lt;/pre&gt;</description>
<category>Ubuntu</category>
<category>Linux</category>
<link>null#%5B%5BHow%20to%20Tell%20What%20Version%20of%20Ubuntu%20You%20Are%20Running%5D%5D</link>
<pubDate>Mon, 28 May 2012 16:29:00 GMT</pubDate>

</item>
<item>
<title>Setting Marks and Jumping</title>
<description>Typing &lt;br&gt;&lt;pre&gt;'0
&lt;/pre&gt; will cause Vim to jump to the 0 mark, which is a &quot;special mark&quot; that represents the last file edited when Vim was exited.&lt;br&gt;&lt;br&gt;To set a mark, type ma &lt;span&gt;—&lt;/span&gt; this will store the current position in the a mark. Move somewhere else within the file then type 'a to go back. These lowercase marks are remembered as long as the file is in the buffer list. Conversely, the uppercase marks 'A to 'Z include the file name, so they can be used to efficiently jump between points in different files.&lt;br&gt;&lt;br&gt;There are a lot more special marks, but one that's worth knowing about is &lt;br&gt;&lt;pre&gt;''.
&lt;/pre&gt;Typing this will move to the position before the last jump, or where the last mark as created. I find myself using this when I skip somewhere far away in a long file and have forgot to set a mark from where I left off.&lt;br&gt;&lt;br&gt;To read more about these motion commands, take a look at &lt;br&gt;&lt;pre&gt;:help mark-motions.
&lt;/pre&gt;</description>
<category>Vim</category>
<link>null#%5B%5BSetting%20Marks%20and%20Jumping%5D%5D</link>
<pubDate>Wed, 09 May 2012 13:16:00 GMT</pubDate>

</item>
<item>
<title>Surround Vim Plugin</title>
<description>Press cs&quot;' (that's c, s, double quote, single quote) inside &lt;br&gt;&lt;br&gt;&quot;Hello world!&quot; &lt;br&gt;&lt;br&gt;to change it to &lt;br&gt;&lt;br&gt;'Hello world!' &lt;br&gt;&lt;br&gt;Now press cs'&amp;lt;q&amp;gt; to change it to &lt;br&gt;&lt;br&gt;&amp;lt;q&amp;gt;Hello world!&amp;lt;/q&amp;gt; &lt;br&gt;&lt;br&gt;To go full circle, press cst&quot; to get &lt;br&gt;&lt;br&gt;&quot;Hello world!&quot; &lt;br&gt;&lt;br&gt;To remove the delimiters entirely, press ds&quot; . &lt;br&gt;&lt;br&gt;Hello world! &lt;br&gt;&lt;br&gt;Now with the cursor on &quot;Hello&quot;, press ysiw] (iw is a text object). &lt;br&gt;&lt;br&gt;[Hello] world! &lt;br&gt;&lt;br&gt;Let's make that braces and add some space (use &quot;}&quot; instead of &quot;{&quot; for no space): cs]{ &lt;br&gt;&lt;br&gt;{ Hello } world! &lt;br&gt;&lt;br&gt;Now wrap the entire line in parentheses with yssb or yss) . &lt;br&gt;&lt;br&gt;({ Hello } world!) &lt;br&gt;&lt;br&gt;Revert to the original text: ds{ds) &lt;br&gt;&lt;br&gt;Hello world! &lt;br&gt;&lt;br&gt;Emphasize hello: ysiw&amp;lt;em&amp;gt; &lt;br&gt;&lt;br&gt;&amp;lt;em&amp;gt;Hello&amp;lt;/em&amp;gt; world! &lt;br&gt;&lt;br&gt;Finally, let's try out visual mode. Press a capital V (for linewise visual mode) &lt;br&gt;followed by S&amp;lt;p class=&quot;important&quot;&amp;gt;. &lt;br&gt;&lt;br&gt;&amp;lt;p class=&quot;important&quot;&amp;gt; &lt;br&gt;  &amp;lt;em&amp;gt;Hello&amp;lt;/em&amp;gt; world! &lt;br&gt;&amp;lt;/p&amp;gt; </description>
<category>Vim</category>
<link>null#%5B%5BSurround%20Vim%20Plugin%5D%5D</link>
<pubDate>Wed, 25 Apr 2012 11:57:00 GMT</pubDate>

</item>
<item>
<title>Replace word with buffer in vim</title>
<description>his method has the advantage of being easily repeatable using the . repeat command.&lt;br&gt;&lt;pre&gt;yiw	 yank inner word (copy word under cursor, say &quot;first&quot;. Same as above).
...	 Move the cursor to another word (say &quot;second&quot;).
ciw&amp;lt;C-r&amp;gt;0	 select &quot;second&quot;, then replace it with &quot;first&quot; If you are at the start of the word then cw&amp;lt;C-r&amp;gt;0 is sufficient.
...	 Move the cursor to another word (say &quot;third&quot;).
.	 select &quot;third&quot;, then replace it with &quot;first&quot;.
&lt;/pre&gt;</description>
<category>Vim</category>
<link>null#%5B%5BReplace%20word%20with%20buffer%20in%20vim%5D%5D</link>
<pubDate>Wed, 25 Apr 2012 11:56:00 GMT</pubDate>

</item>
<item>
<title>Changing the hostname or computer name in ubuntu</title>
<description>This is a really simple one, but can cause a lot of weeping and gnashing of teeth. You were given the default &quot;ubuntu&quot; hostname when you installed, and now you want something cooler that enhances your street cred. Heres how to change it:&lt;br&gt;&lt;br&gt;Edit /etc/hostname and change to the new value, you can use nano instead of vi, but remember that real men prefer vi.&lt;br&gt;&lt;pre&gt;vi /etc/hostname
&lt;/pre&gt;&lt;br&gt;Edit /etc/hosts and change the old 127.0.1.1 line to your new hostname (if you dont do this, you wont be able to use sudo anymore. If you hav e already done it, press ESC on the grub menu, choose recovery, and edit your host file to the correct settings)&lt;br&gt;&lt;pre&gt;127.0.0.1   localhost
127.0.1.1   ubuntu.local    ubuntu   # change to your new hostname/fqdn
&lt;/pre&gt;Now after a reboot, your hostname will be the new one you chose. To change without a reboot, you can just use hostname.sh after you edit /etc/hostname:&lt;br&gt;&lt;pre&gt;sudo /etc/init.d/hostname.sh start
&lt;/pre&gt;</description>
<category>Linux</category>
<link>null#%5B%5BChanging%20the%20hostname%20or%20computer%20name%20in%20ubuntu%5D%5D</link>
<pubDate>Wed, 18 Apr 2012 10:31:00 GMT</pubDate>

</item>
</channel>
</rss>
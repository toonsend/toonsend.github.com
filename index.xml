<?xml version="1.0"?>
<rss version="2.0">
<channel>
<title>ToonsWiki</title>
<description>a place for stuff</description>
<language>en</language>
<copyright>Copyright 2012 Toons</copyright>
<pubDate>Thu, 12 Apr 2012 19:03:48 GMT</pubDate>
<lastBuildDate>Thu, 12 Apr 2012 19:03:48 GMT</lastBuildDate>
<docs>http://blogs.law.harvard.edu/tech/rss</docs>
<generator>TiddlyWiki 2.6.5</generator>
<item>
<title>Date Format In Ruby</title>
<description>Format meaning &lt;br&gt;&lt;br&gt;&lt;pre&gt;  %a - The abbreviated weekday name (``Sun'')
  %A - The  full  weekday  name (``Sunday'')
  %b - The abbreviated month name (``Jan'')
  %B - The  full  month  name (``January'')
  %c - The preferred local date and time representation
  %d - Day of the month (01..31)
  %H - Hour of the day, 24-hour clock (00..23)
  %I - Hour of the day, 12-hour clock (01..12)
  %j - Day of the year (001..366)
  %m - Month of the year (01..12)
  %M - Minute of the hour (00..59)
  %p - Meridian indicator (``AM''  or  ``PM'')
  %S - Second of the minute (00..60)
  %U - Week  number  of the current year,
          starting with the first Sunday as the first
          day of the first week (00..53)
  %W - Week  number  of the current year,
          starting with the first Monday as the first
          day of the first week (00..53)
  %w - Day of the week (Sunday is 0, 0..6)
  %x - Preferred representation for the date alone, no time
  %X - Preferred representation for the time alone, no date
  %y - Year without a century (00..99)
  %Y - Year with century
  %Z - Time zone name
  %% - Literal ``%'' character

   t = Time.now
   t.strftime(&quot;Printed on %m/%d/%Y&quot;)   #=&amp;gt; &quot;Printed on 04/09/2003&quot;
   t.strftime(&quot;at %I:%M%p&quot;)            #=&amp;gt; &quot;at 08:56AM&quot;
&lt;/pre&gt;</description>
<category>Ruby</category>
<link>null#%5B%5BDate%20Format%20In%20Ruby%5D%5D</link>
<pubDate>Thu, 12 Apr 2012 19:03:26 GMT</pubDate>

</item>
<item>
<title>Fixing Tmux Cut and Paste</title>
<description>Tmux is becoming pretty popular as of late, but as with any new technology, there are skeptics. I’m here to quell some rumors and outline how to start using Tmux effectively.&lt;br&gt;&lt;br&gt;Out of all the questions I get, the most common is, “Does copying and pasting work in Tmux? I heard it wasn’t possible.” Forget that noise; copying and pasting works wonderfully with a couple of extra steps.&lt;br&gt;&lt;br&gt;&lt;a target=&quot;_blank&quot; title=&quot;External link to http://robots.thoughtbot.com/post/19398560514/how-to-copy-and-paste-with-tmux-on-mac-os-x&quot; href=&quot;http://robots.thoughtbot.com/post/19398560514/how-to-copy-and-paste-with-tmux-on-mac-os-x&quot; class=&quot;externalLink&quot;&gt;http://robots.thoughtbot.com/post/19398560514/how-to-copy-and-paste-with-tmux-on-mac-os-x&lt;/a&gt;</description>
<link>null#%5B%5BFixing%20Tmux%20Cut%20and%20Paste%5D%5D</link>
<pubDate>Sat, 07 Apr 2012 05:14:00 GMT</pubDate>

</item>
<item>
<title>Creating a new MySql User.</title>
<description>&lt;pre&gt;mysql&amp;gt; CREATE USER 'monty'@'localhost' IDENTIFIED BY 'some_pass';
mysql&amp;gt; GRANT ALL PRIVILEGES ON *.* TO 'monty'@'localhost'
    -&amp;gt;     WITH GRANT OPTION;
mysql&amp;gt; CREATE USER 'monty'@'%' IDENTIFIED BY 'some_pass';
mysql&amp;gt; GRANT ALL PRIVILEGES ON *.* TO 'monty'@'%'
    -&amp;gt;     WITH GRANT OPTION;
mysql&amp;gt; CREATE USER 'admin'@'localhost';
mysql&amp;gt; GRANT RELOAD,PROCESS ON *.* TO 'admin'@'localhost';
mysql&amp;gt; CREATE USER 'dummy'@'localhost';
&lt;/pre&gt;</description>
<link>null#%5B%5BCreating%20a%20new%20MySql%20User.%5D%5D</link>
<pubDate>Wed, 04 Apr 2012 14:20:00 GMT</pubDate>

</item>
<item>
<title>Forgetting to run screen</title>
<description>So I'm in a friend's house and I've been doing some compwinner work when I realised there is no way this alter table is going to finish before I go home and I forgot to run screen. A conversation with Toons came in to my head and I suddenly remembered something. &lt;br&gt;If you do make this mistake you can get around it as follows&lt;br&gt;&lt;pre&gt;CTRL-z   suspends your current process
bg backgrounds it
disown %1 detaches it from your pts
&lt;/pre&gt;&lt;br&gt;hey presto you now can go shut the terminal, go away and it'll keep running in the background. :)&lt;br&gt;Obviously unlike in screen, you can't get it back, but at least you haven't wasted 4 hours&lt;br&gt;&lt;br&gt;DMC</description>
<category>bash</category>
<link>null#%5B%5BForgetting%20to%20run%20screen%5D%5D</link>
<pubDate>Thu, 22 Mar 2012 09:14:00 GMT</pubDate>

</item>
<item>
<title>How to fix the backspace key in screen</title>
<description>&lt;pre&gt;alias screen='TERM=screen screen'
&lt;/pre&gt;</description>
<link>null#%5B%5BHow%20to%20fix%20the%20backspace%20key%20in%20screen%5D%5D</link>
<pubDate>Tue, 20 Mar 2012 10:31:00 GMT</pubDate>

</item>
<item>
<title>Removing spaces from filenames - renaming files</title>
<description>&lt;pre&gt;find . -name '* *' | while read file; do target=`echo &quot;$file&quot; | sed 's/ /_/g'`; echo &quot;Renaming '$file' to '$target'&quot;; mv &quot;$file&quot; &quot;$target&quot;; done;
&lt;/pre&gt;</description>
<category>Bash</category>
<link>null#%5B%5BRemoving%20spaces%20from%20filenames%20-%20renaming%20files%5D%5D</link>
<pubDate>Tue, 20 Mar 2012 10:12:00 GMT</pubDate>

</item>
<item>
<title>Get all the listening ports on a Mac</title>
<description>&lt;pre&gt;netstat -at | grep -i &quot;listen&quot;
&lt;/pre&gt;</description>
<category>Mac</category>
<category>Bash</category>
<link>null#%5B%5BGet%20all%20the%20listening%20ports%20on%20a%20Mac%5D%5D</link>
<pubDate>Tue, 20 Mar 2012 10:03:00 GMT</pubDate>

</item>
<item>
<title>Tar a directory</title>
<description>&lt;pre&gt;tar cvzf foo.tgz cps100
&lt;/pre&gt;will tar the directory cps100 (and its files/subdirectories) into a tar file named foo.tgz. </description>
<category>Bash</category>
<link>null#%5B%5BTar%20a%20directory%5D%5D</link>
<pubDate>Tue, 20 Mar 2012 10:02:00 GMT</pubDate>

</item>
<item>
<title>Terminal Changing Text</title>
<description>Moves the cursor to the start of a line&lt;br&gt;&lt;pre&gt;ctrl+a or Home
&lt;/pre&gt;&lt;br&gt;Moves the cursor to the end of a line.&lt;br&gt;&lt;pre&gt;ctrl+e or End
&lt;/pre&gt;&lt;br&gt;Moves to the beginning of the previous or current word.&lt;br&gt;&lt;pre&gt;ctrl+b
&lt;/pre&gt;&lt;br&gt;Deletes from the current cursor position to the end of the line.&lt;br&gt;&lt;pre&gt;ctrl+k
&lt;/pre&gt;&lt;br&gt;Deletes the whole of the current line.&lt;br&gt;&lt;pre&gt;ctrl+u
&lt;/pre&gt;&lt;br&gt;Deletes the word before the cursor.&lt;br&gt;&lt;pre&gt;ctrl+w
&lt;/pre&gt;</description>
<category>Bash</category>
<link>null#%5B%5BTerminal%20Changing%20Text%5D%5D</link>
<pubDate>Tue, 20 Mar 2012 10:02:00 GMT</pubDate>

</item>
<item>
<title>Using Tar</title>
<description>To tar all .cc and .h files into a tar file named foo.tgz use:&lt;br&gt;&lt;pre&gt;    tar cvzf foo.tgz *.cc *.h
&lt;/pre&gt;This creates (c) a compressed (z) tar file named foo.tgz (f) and shows the files being stored into the tar file (v). The .tgz suffix is a convention for gzipped tar files, it's useful to use the convention since you'll know to use z to restore/extract.&lt;br&gt;&lt;br&gt;It's often more useful to tar a directory (which tars all files and subdirectories recursively unless you specify otherwise). The nice part about tarring a directory is that it is untarred as a directory rather than as individual files.&lt;br&gt;&lt;br&gt;&lt;pre&gt;   tar cvzf foo.tgz cps100
&lt;/pre&gt;will tar the directory cps100 (and its files/subdirectories) into a tar file named foo.tgz.&lt;br&gt;&lt;br&gt;To see a tar file's table of contents use:&lt;br&gt;&lt;pre&gt;   tar tzf foo.tgz
&lt;/pre&gt;&lt;br&gt;To extract the contents of a tar file use:&lt;br&gt;&lt;pre&gt;    tar xvzf foo.tgz
&lt;/pre&gt;</description>
<category>Tar</category>
<category>Bash</category>
<link>null#%5B%5BUsing%20Tar%5D%5D</link>
<pubDate>Tue, 20 Mar 2012 10:02:00 GMT</pubDate>

</item>
<item>
<title>Using the at command for delayed jobs</title>
<description>&lt;pre&gt;dtownsend@n-jump:~$ at 9:51
warning: commands will be executed using /bin/sh
at&amp;gt; touch delme.txt
at&amp;gt; &amp;lt;EOT&amp;gt;
&lt;/pre&gt;Hit Ctrl d&lt;br&gt;&lt;pre&gt;job 2 at Mon Oct 10 09:51:00 2011
&lt;/pre&gt;</description>
<category>Bash</category>
<link>null#%5B%5BUsing%20the%20at%20command%20for%20delayed%20jobs%5D%5D</link>
<pubDate>Tue, 20 Mar 2012 10:02:00 GMT</pubDate>

</item>
<item>
<title>Sniff a Port with ngrep</title>
<description>&lt;pre&gt;sudo ngrep -d lo port 8000
&lt;/pre&gt;</description>
<category>Bash</category>
<category>Ngrep</category>
<link>null#%5B%5BSniff%20a%20Port%20with%20ngrep%5D%5D</link>
<pubDate>Tue, 20 Mar 2012 10:01:00 GMT</pubDate>

</item>
<item>
<title>Search and Replace Across Multiple Files</title>
<description>&lt;pre&gt;perl -p -i -e&quot;s#param_dict#util_dict#g&quot; `git grep &quot;param_dict&quot; | cut -d: -f1 | sort | uniq`
&lt;/pre&gt;</description>
<category>Bash</category>
<link>null#%5B%5BSearch%20and%20Replace%20Across%20Multiple%20Files%5D%5D</link>
<pubDate>Tue, 20 Mar 2012 09:59:00 GMT</pubDate>

</item>
<item>
<title>Move Empty Files To New Directory</title>
<description>ls -al | grep -i .log$ | awk '$5==0 {print $8}'  |  xargs -I {} mv {} old_logs/</description>
<category>Bash</category>
<link>null#%5B%5BMove%20Empty%20Files%20To%20New%20Directory%5D%5D</link>
<pubDate>Tue, 20 Mar 2012 09:57:00 GMT</pubDate>

</item>
<item>
<title>Moving Files more that 5 days old</title>
<description>&lt;pre&gt;sudo find ./ -type f -name &quot;mt_requests*.log&quot; -mtime +5 -exec nice gzip -v --fast {} \;
&lt;/pre&gt;</description>
<category>Bash</category>
<link>null#%5B%5BMoving%20Files%20more%20that%205%20days%20old%5D%5D</link>
<pubDate>Tue, 20 Mar 2012 09:57:00 GMT</pubDate>

</item>
<item>
<title>Parametise Xargs</title>
<description>Use 'I' to mark what you want to call the passed in parameter.&lt;br&gt;&lt;pre&gt;xargs -I {} mv {} old_logs
&lt;/pre&gt;</description>
<category>Bash</category>
<link>null#%5B%5BParametise%20Xargs%5D%5D</link>
<pubDate>Tue, 20 Mar 2012 09:57:00 GMT</pubDate>

</item>
<item>
<title>Doing a Diff on Two Directories</title>
<description>&lt;pre&gt;find . -type f -not -exec cmp {} ..//poo2/{} &quot;;&quot; -print
&lt;/pre&gt;</description>
<category>Bash</category>
<link>null#%5B%5BDoing%20a%20Diff%20on%20Two%20Directories%5D%5D</link>
<pubDate>Tue, 20 Mar 2012 09:56:00 GMT</pubDate>

</item>
<item>
<title>Find Files modified since</title>
<description>&lt;pre&gt;find /path -mtime -90
&lt;/pre&gt;Where 90 is the number of days since Jan 1st.</description>
<category>Bash</category>
<link>null#%5B%5BFind%20Files%20modified%20since%5D%5D</link>
<pubDate>Tue, 20 Mar 2012 09:56:00 GMT</pubDate>

</item>
<item>
<title>Making a POST request with curl</title>
<description>&lt;pre&gt;curl -v -H &quot;Content-Type: application/json&quot; -X POST -d '{&quot;username&quot;:&quot;bob&quot;}' http://localhost:8000/orgs/itv/users
&lt;/pre&gt;</description>
<category>Curl</category>
<category>Bash</category>
<link>null#%5B%5BMaking%20a%20POST%20request%20with%20curl%5D%5D</link>
<pubDate>Tue, 20 Mar 2012 09:56:00 GMT</pubDate>

</item>
<item>
<title>Making child folders in unix</title>
<description>&lt;pre&gt;mkdir -p /project/src
&lt;/pre&gt;</description>
<category>Bash</category>
<link>null#%5B%5BMaking%20child%20folders%20in%20unix%5D%5D</link>
<pubDate>Tue, 20 Mar 2012 09:56:00 GMT</pubDate>

</item>
</channel>
</rss>